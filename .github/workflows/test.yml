name: Test

on:
  pull_request:
  workflow_dispatch:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}

env:
  FORCE_COLOR: 1
  CI: True

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-dir: ${{ steps.pip-cache.outputs.dir }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: actions/cache@v3
        with:
          path: ${{ needs.setup.outputs.cache-dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        env:
          PIP_CACHE_DIR: ${{ needs.setup.outputs.cache-dir }}
        run: |
          python -m pip install -U pip
          python -m pip install --no-warn-script-location -r requirements.txt

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Build staticfiles
        run: |
          npm install
          python manage.py tailwind build
          python manage.py collectstatic

      # https://hynek.me/articles/ditch-codecov-python/
      - name: Run tests
        run: |
          time coverage run -m pytest --durations 10 --reverse -p no:randomly -n auto --dist loadfile
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY
          # python -m coverage report --fail-under=100

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ github.run_id }}
          path: htmlcov
        if: ${{ failure() }}

  types:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: actions/cache@v3
        with:
          path: ${{ needs.setup.outputs.cache-dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        env:
          PIP_CACHE_DIR: ${{ needs.setup.outputs.cache-dir }}
        run: |
          python -m pip install -U pip
          python -m pip install --no-warn-script-location -r requirements.txt

      - name: Run mypy
        run: |
          python -m mypy

  checks:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: actions/cache@v3
        with:
          path: ${{ needs.setup.outputs.cache-dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        env:
          PIP_CACHE_DIR: ${{ needs.setup.outputs.cache-dir }}
        run: |
          python -m pip install -U pip
          python -m pip install --no-warn-script-location -r requirements.txt

      - name: Run deployment checks
        env:
          DEBUG: False
        run: |
          python -m manage check --deploy
