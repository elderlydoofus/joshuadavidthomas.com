---
import fs from "fs";
import Layout from "../../layouts/PageLayout.astro";
import { ArrowNarrowRightIcon } from "@heroicons/react/solid/index.js";
import TilListItem from "../../components/TilListItem.astro";

const POSTS_COUNT = 5;

// read directories and sort alphabetically
const categories = fs
  .readdirSync("src/pages/til")
  .filter((category) => {
    return fs.lstatSync(`src/pages/til/${category}`).isDirectory();
  })
  .sort((a, b) => a.localeCompare(b));

// function to get count of posts for a category
const categoryCount = (category: string) => {
  const files = fs.readdirSync(`src/pages/til/${category}`);
  return files.length;
};

const recentPosts = await Astro.glob("./**/*.md").then((posts) => {
  return (
    posts
      .map((post) => {
        const { published } = post.frontmatter;
        const slug = post.file.split("/").pop()?.replace(".md", "");
        const category = post.file.split("/").slice(-2)[0];

        return {
          ...post,
          date: new Date(published),
          slug,
          category,
        };
      })
      // sort by Date
      .sort((a, b) => b.date.getTime() - a.date.getTime())
      // take first 5
      .slice(0, POSTS_COUNT)
  );
});
---

<Layout
  title="Today I Learned"
  description="Snippets of code and other things I've picked up along the way, mostly related to web development."
>
  <nav class="mt-6">
    <ul class="flex flex-wrap gap-4">
      {
        categories.map((category) => (
          <li>
            <a
              href={`/til/${category}`}
              class="inline-flex flex-1 items-baseline px-3 text-sm rounded-full font-medium py-1.5 bg-zinc-600 dark:bg-zinc-300 text-zinc-100 dark:text-zinc-900 hover:underline"
            >
              {category}
              <span class="inline-flex items-center justify-center w-5 h-5 ml-1.5 -mr-0.5 text-xs rounded-full text-zinc-900 dark:text-zinc-100 bg-zinc-200 dark:bg-zinc-700">
                {categoryCount(category)}
              </span>
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
  <section>
    <h2 class="mt-10 text-2xl font-semibold text-zinc-800 dark:text-zinc-200">
      Recent Posts
    </h2>
    <ul class="mt-8">
      {
        recentPosts.map((post) => (
          <TilListItem
            url={`/til/${post.category}/${post.slug}`}
            title={post.frontmatter.title}
            category={post.category}
            description={post.frontmatter.description}
            date={post.date}
            className="mt-4"
          />
        ))
      }
    </ul>
    {
      recentPosts.length > POSTS_COUNT && (
        <div class="mt-12">
          <a
            href="/til/all"
            class="inline-flex items-center text-xs font-medium uppercase text-zinc-700 dark:text-zinc-300 hover:underline"
          >
            View all
            <ArrowNarrowRightIcon className="w-4 h-4 ml-1.5" />
          </a>
        </div>
      )
    }
  </section>
</Layout>
