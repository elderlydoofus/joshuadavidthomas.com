---
const { title } = Astro.props;
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="manifest" href="/site.webmanifest" />
  <script
    defer
    data-domain="joshthomas.dev"
    data-api="/bloodhound/api/event"
    src="https://joshthomas.dev/bloodhound/js/script.js"
  ></script>
  <script is:inline>
    let mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");

    function updateTheme(savedTheme) {
      let theme = "system";
      try {
        if (!savedTheme) {
          savedTheme = window.localStorage.theme;
        }
        if (savedTheme === "dark") {
          theme = "dark";
          document.documentElement.classList.add("dark");
        } else if (savedTheme === "light") {
          theme = "light";
          document.documentElement.classList.remove("dark");
        } else if (mediaQuery.matches) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      } catch {
        theme = "light";
        document.documentElement.classList.remove("dark");
      }
      return theme;
    }

    function updateThemeWithoutTransitions(savedTheme) {
      updateTheme(savedTheme);
      document.documentElement.classList.add("[&_*]:!transition-none");
      window.setTimeout(() => {
        document.documentElement.classList.remove("[&_*]:!transition-none");
      }, 0);
    }

    document.documentElement.setAttribute("data-theme", updateTheme());

    new MutationObserver(([{ oldValue }]) => {
      let newValue = document.documentElement.getAttribute("data-theme");
      if (newValue !== oldValue) {
        try {
          window.localStorage.setItem("theme", newValue);
        } catch {}
        updateThemeWithoutTransitions(newValue);
      }
    }).observe(document.documentElement, {
      attributeFilter: ["data-theme"],
      attributeOldValue: true,
    });

    mediaQuery.addEventListener("change", updateThemeWithoutTransitions);
    window.addEventListener("storage", updateThemeWithoutTransitions);
    console.log(
      "Layout theme",
      document.documentElement.getAttribute("data-theme")
    );
  </script>
</head>
