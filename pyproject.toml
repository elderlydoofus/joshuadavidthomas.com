[project]
authors = [{name = "Josh Thomas", email = "josh@joshthomas.dev"}]
dependencies = [
  "attrs>=24.2.0",
  "croniter>=3.0.3",
  "django-allauth[socialaccount]>=64.2.1",
  "django-click>=2.4.0",
  "django-cotton>=0.9.40",
  "django-extensions>=3.2.3",
  "django-filter>=24.3",
  "django-flyio>=0.1.1",
  "django-health-check>=3.18.3",
  "django-htmx>=1.19.0",
  "django-simple-history>=3.7.0",
  "django-simple-nav>=0.11.0",
  "django-stubs-ext>=5.0.4",
  "django-tailwind-cli>=2.15.0",
  "django-template-partials>=24.4",
  "django-twc-toolbox[crud]>=0.16.0",
  "django<5.2",
  "djangorestframework>=3.15.2",
  "environs[django]>=11.0.0",
  "gunicorn>=23.0.0",
  "heroicons[django]>=2.8.0",
  "httpx>=0.27.2",
  "markdown-it-py[plugins]>=3.0.0",
  "pillow>=10.4.0",
  "psycopg[binary]>=3.2.1",
  "pygments>=2.18.0",
  "pyotp>=2.9.0",
  "qrcode[pil]>=7.4.2",
  "sentry-sdk[django]>=2.14.0",
  "whitenoise>=6.7.0",
  "yamdl>=1.0.0"
]
dynamic = ["version"]
name = "joshthomas-dev"
requires-python = ">=3.12"

[project.optional-dependencies]
dev = [
  "coverage[toml]>=7.6.1",
  "django-browser-reload>=1.15.0",
  "django-coverage-plugin>=3.1.0",
  "django-debug-toolbar>=4.4.6",
  "django-stubs>=5.0.4",
  "faker>=28.4.1",
  "ipython>=8.27.0",
  "model-bakery>=1.19.5",
  "mypy>=1.11.2",
  "playwright>=1.47.0",
  "pre-commit>=3.8.0",
  "pytest>=8.3.3",
  "pytest-cov>=5.0.0",
  "pytest-django>=4.9.0",
  "pytest-is-running>=1.5.1",
  "pytest-playwright>=0.5.2",
  "pytest-randomly>=3.15.0",
  "pytest-xdist>=3.6.1",
  "ruff>=0.6.5",
  "types-pygments>=2.18.0.20240506"
]

[tool.bumpver]
commit = true
commit_message = ":bookmark: bump version {old_version} -> {new_version}"
current_version = "2025.2.2"
push = false  # set to false for CI
tag = true
version_pattern = "YYYY.MM.INC1"

[tool.bumpver.file_patterns]
"config/__init__.py" = ['__version__ = "{version}"']
"tests/test_version.py" = ['assert __version__ == "{version}"']

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if DEBUG:",
  "if not DEBUG:",
  "if settings.DEBUG:",
  "if TYPE_CHECKING:",
  'def __str__\(self\)\s?\-?\>?\s?\w*\:'
]

[tool.coverage.run]
branch = true
omit = ["*/migrations/*"]
source = ["blog", "config", "core", "flyio", "users"]

[tool.django-stubs]
django_settings_module = "config.settings"

[tool.djlint]
blank_line_after_tag = "load,extends,endblock,endpartialdef"
blank_line_before_tag = "block,partialdef"
custom_blocks = "partialdef"
custom_html = "c-\\w+"
ignore = "H031"  # Don't require `meta` tag keywords
indent = 2
profile = "django"

[tool.mypy]
check_untyped_defs = true
files = ["blog", "config", "core", "flyio", "users"]
no_implicit_optional = true
plugins = ["mypy_django_plugin.main"]
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_errors = true
module = ["*.migrations.*"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "allauth.*",
  "debug_toolbar.*",
  "django_cotton.*",
  "django_twc_toolbox.*",  # TODO: remove when I add `py.typed` to this package
  "djclick.*",
  "gunicorn.*",
  "health_check.*",
  "neapolitan.*",
  "qrcode.*",
  "simple_history.*"
]

[tool.mypy_django_plugin]
ignore_missing_model_attributes = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
addopts = "--reuse-db -n auto --dist loadfile --cov --cov-report= --cov-config=pyproject.toml"
norecursedirs = ".* bin build dist *.egg htmlcov logs node_modules templates venv"
python_files = "tests.py test_*.py *_tests.py"

[tool.ruff]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".github",
  ".hg",
  ".mypy_cache",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "migrations",
  "node_modules",
  "static",
  "venv"
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
ignore = ["E501", "E741"]  # temporary
indent-width = 4
# Same as Black.
line-length = 88
per-file-ignores = {}
select = [
  "B",  # flake8-bugbear
  "E",  # Pycodestyle
  "F",  # Pyflakes
  "I"  # isort
]
# Assume Python 3.12
target-version = "py312"
unfixable = []

[tool.ruff.format]
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Like Black, use double quotes for strings.
quote-style = "double"

[tool.ruff.isort]
force-single-line = true
known-first-party = ["blog", "config", "core", "flyio", "users"]
required-imports = ["from __future__ import annotations"]

[tool.setuptools]
packages = [
  "blog",
  "config",
  "core",
  "flyio",
  "talks",
  "users"
]

[tool.uv]
dev-dependencies = [
  "coverage[toml]>=7.6.1",
  "django-browser-reload>=1.15.0",
  "django-coverage-plugin>=3.1.0",
  "django-debug-toolbar>=4.4.6",
  "django-stubs>=5.0.4",
  "faker>=28.4.1",
  "ipython>=8.27.0",
  "model-bakery>=1.19.5",
  "mypy>=1.11.2",
  "playwright>=1.47.0",
  "pre-commit>=3.8.0",
  "pytest>=8.3.3",
  "pytest-cov>=5.0.0",
  "pytest-django>=4.9.0",
  "pytest-is-running>=1.5.1",
  "pytest-playwright>=0.5.2",
  "pytest-randomly>=3.15.0",
  "pytest-xdist>=3.6.1",
  "ruff>=0.6.5",
  "types-pygments>=2.18.0.20240506"
]
